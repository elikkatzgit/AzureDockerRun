###############################################################
# WhiteSource Unified-Agent configuration file
###############################################################
# GENERAL SCAN MODE: Files and Package Managers
###############################################################
# Organization vitals
######################

apiKey=a420fcc1a4194e2898fef7b0d044356d83023a9d21fe4f869567fae104789d8c
#userKey is required if WhiteSource administrator has enabled "Enforce user level access" option
#userKey=
#requesterEmail=user@provider.com

projectName=dockerRun
projectVersion=
projectToken=
#projectTag= key:value

productName=azureDO
productVersion=
productToken=

#projectPerFolder=true
#projectPerFolderIncludes=
#projectPerFolderExcludes=

#wss.connectionTimeoutMinutes=60

# Change the below URL to your WhiteSource server.
# Use the 'WhiteSource Server URL' which can be retrieved
# from your 'Profile' page on the 'Server URLs' panel.
# Then, add the '/agent' path to it.
wss.url=https://saas.whitesourcesoftware.com/agent
#wss.url=https://app.whitesourcesoftware.com/agent
#wss.url=https://app-eu.whitesourcesoftware.com/agent

############
# Policies #
############
checkPolicies=true
forceCheckAllDependencies=false
forceUpdate=false
forceUpdate.failBuildOnPolicyViolation=false
#updateInventory=false

###########
# General #
###########
#offline=false
#updateType=APPEND
#ignoreSourceFiles=true
#scanComment=
#failErrorLevel=ALL
#requireKnownSha1=false

#generateProjectDetailsJson=true
#generateScanReport=true
#scanReportTimeoutMinutes=10
#scanReportFilenameFormat=

#analyzeFrameworks=true
#analyzeFrameworksReference=

#updateEmptyProject=false

#log.files.level=
#log.files.maxFileSize=
#log.files.maxFilesCount=
#log.files.path=

########################################
# Package Manager Dependency resolvers #
########################################
#resolveAllDependencies=false
#excludeDependenciesFromNodes=.*commons-io.*,.*maven-model

#includes=**/*.m **/*.mm  **/*.js **/*.php
includes=**/*.*
#includes=**/*.gem **/*.rb
#includes=**/*.dll **/*.cs **/*.nupkg
#includes=**/*.tgz **/*.deb **/*.gzip **/*.rpm **/*.tar.bz2
#includes=**/*.zip **/*.tar.gz **/*.egg **/*.whl **/*.py

#Exclude file extensions or specific directories by adding **/*.<extension> or **/<excluded_dir>/**
excludes=**/*sources.jar **/*javadoc.jar

case.sensitive.glob=false
followSymbolicLinks=true

######################
# Archive properties #
######################
archiveExtractionDepth=2
archiveIncludes=**/*.war **/*.ipa
#archiveExcludes=**/*sources.jar

##############
# SCAN MODES #
##############

# Docker images
################
docker.scanImages=true
docker.includes=.*.*
#docker.excludes=
docker.pull.enable=true
docker.pull.images=.*.*
#docker.pull.maxImages=10
#docker.pull.tags=.*.*
#docker.pull.digest=
#docker.delete.force=true
#docker.login.sudo=false
#docker.projectNameFormat=default
#docker.scanTarFiles=true

#docker.aws.enable=true
#docker.aws.registryIds=

#docker.azure.enable=true
#docker.azure.userName=
#docker.azure.userPassword=
#docker.azure.registryNames=
#docker.azure.authenticationType=containerRegistry
#docker.azure.registryAuthenticationParameters=<registry1UserName>:<registry1Password> <registry2UserName>:<registry2Password>

#docker.artifactory.enable=true
#docker.artifactory.url=
#docker.artifactory.pullUrl=
#docker.artifactory.userName=
#docker.artifactory.userPassword=
#docker.artifactory.repositoriesNames=
#docker.artifactory.dockerAccessMethod=

docker.hub.enabled=true
docker.hub.userName=elikkatz
docker.hub.userPassword=Israel11
docker.hub.organizationsNames=elikkatz

# Docker containers
####################
#docker.scanContainers=true
#docker.containerIncludes=.*.*
#docker.containerExcludes=

# Linux package manager settings
################################
#scanPackageManager=true

# Serverless settings
######################
#serverless.provider=
#serverless.scanFunctions=true
#serverless.includes=
#serverless.excludes=
#serverless.region=
#serverless.maxFunctions=10

# Artifactory settings
########################
#artifactory.enableScan=true
#artifactory.url=
#artifactory.accessToken=
#artifactory.repoKeys=
#artifactory.userName=
#artifactory.userPassword=

##################
# Proxy settings #
##################
#proxy.host=
#proxy.port=
#proxy.user=
#proxy.pass=

################
# SCM settings #
################
#scm.type=
#scm.user=
#scm.pass=
#scm.ppk=
#scm.url=
#scm.branch=
#scm.tag=
#scm.npmInstall=
#scm.npmInstallTimeoutMinutes=
#scm.repositoriesFile=